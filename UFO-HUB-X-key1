-- UFO HUB X key.lua  (Key UI + Online Validator via key2 JSON)
-- ‚úÖ ‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå key2 (JSON) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å "‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡∏à‡∏£‡∏¥‡∏á"
-- ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö JSON ‡πÑ‡∏î‡πâ 2 ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:
--    1) { "valid_keys": ["A","B",...], "expires_in": 3600 }
--    2) { "games": { "Grow a Garden": "AAA", ... }, "expires_in": 3600 }
-- ‚úÖ ‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß call: _G.UFO_SaveKeyState(key, expires_at, false) ‡πÅ‡∏•‡πâ‡∏ß _G.UFO_StartDownload()
-- ‚ùå ‡∏õ‡∏¥‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏° X ‡∏à‡∏∞ "‡πÑ‡∏°‡πà" ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î

-------------------- Services --------------------
local TS   = game:GetService("TweenService")
local CG   = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")

-------------------- CONFIG --------------------
-- üëâ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô RAW URL ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå key2 (JSON) ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
local KEY_DB_URL = "https://raw.githubusercontent.com/UFO-HUB-X-Studio/UFO-HUB-X-key2/refs/heads/main/UFO-HUB-X-key2"

local LOGO_ID   = 112676905543996
local ACCENT    = Color3.fromRGB(0,255,140)
local BG_DARK   = Color3.fromRGB(10,10,10)
local FG        = Color3.fromRGB(235,235,235)
local SUB       = Color3.fromRGB(22,22,22)

-- ‡∏Ñ‡∏µ‡∏¢‡πå‡∏ñ‡∏≤‡∏ß‡∏£‡πÅ‡∏ö‡∏ö allow-list (‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡∏™/‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô)
local ALLOW_KEYS = {
  ["JJJMAX"]                 = { permanent = true, reusable = true },
  ["GMPANUPHONGARTPHAIRIN"]  = { permanent = true, reusable = true },
}

-------------------- Compat HTTP --------------------
local function http_get(url)
  if http and http.request then
    local ok, res = pcall(http.request, {Url=url, Method="GET"})
    if ok and res and (res.Body or res.body) then return true, (res.Body or res.body) end
  end
  if syn and syn.request then
    local ok, res = pcall(syn.request, {Url=url, Method="GET"})
    if ok and res and (res.Body or res.body) then return true, (res.Body or res.body) end
  end
  local ok, body = pcall(function() return game:HttpGet(url) end)
  if ok and body then return true, body end
  return false, "httpget_failed"
end

-------------------- Helpers --------------------
local function log(s)
  s = "[UFO-HUB-X/KEY] "..tostring(s)
  if rconsoleprint then rconsoleprint(s.."\n") else print(s) end
end

local function normKey(s)
  s = tostring(s or ""):gsub("%c",""):gsub("%s+",""):gsub("[^%w]","")
  return string.upper(s)
end

local function isAllowedKey(k)
  local nk = normKey(k)
  return (ALLOW_KEYS[nk] ~= nil), nk
end

local function safeParent(gui)
  local ok=false
  if syn and syn.protect_gui then pcall(function() syn.protect_gui(gui) end) end
  if gethui then ok = pcall(function() gui.Parent = gethui() end) end
  if not ok then gui.Parent = CG end
end

-------------------- Fetch & Validate via key2 --------------------
-- ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö 2 ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON:
-- 1) { "valid_keys": ["A","B"], "expires_in": 3600 }
-- 2) { "games": { "Grow a Garden":"A", ... }, "expires_in": 3600 }
-- ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤: (ok:boolean, expires_at:number|nil, reason:string|nil)
local function validate_with_key2(user_key)
  local ok, raw = http_get(KEY_DB_URL)
  if not ok or not raw then
    return false, nil, "unreachable"
  end

  local parsed
  local jok, jerr = pcall(function() parsed = HttpService:JSONDecode(raw) end)
  if not jok or type(parsed) ~= "table" then
    return false, nil, "bad_json"
  end

  local expires_at = nil
  -- expires_in ‚Üí ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô expires_at (‡∏ì ‡∏ï‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô)
  if parsed.expires_in and tonumber(parsed.expires_in) then
    expires_at = os.time() + tonumber(parsed.expires_in)
  end

  local target = normKey(user_key)

  -- ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà 1: valid_keys ‡πÄ‡∏õ‡πá‡∏ô array
  if type(parsed.valid_keys) == "table" then
    for _, v in ipairs(parsed.valid_keys) do
      if normKey(v) == target then
        return true, expires_at, nil
      end
    end
    return false, nil, "not_found"
  end

  -- ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà 2: games ‡πÄ‡∏õ‡πá‡∏ô object (values ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏µ‡∏¢‡πå)
  if type(parsed.games) == "table" then
    for gameName, keyStr in pairs(parsed.games) do
      if normKey(keyStr) == target then
        return true, expires_at, nil
      end
    end
    return false, nil, "not_found"
  end

  return false, nil, "no_valid_keys_field"
end

-------------------- UI (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏µ ‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏ä‡πâ) --------------------
local gui = Instance.new("ScreenGui")
gui.Name = "UFOHubX_KeyUI"
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
safeParent(gui)

local PANEL_W, PANEL_H = 740, 430
local panel = Instance.new("Frame")
panel.Parent = gui
panel.Active = true
panel.Draggable = true
panel.Size = UDim2.fromOffset(PANEL_W, PANEL_H)
panel.AnchorPoint = Vector2.new(0.5,0.5)
panel.Position = UDim2.fromScale(0.5,0.5)
panel.BackgroundColor3 = BG_DARK
panel.BorderSizePixel = 0
local panelCorner = Instance.new("UICorner", panel)
panelCorner.CornerRadius = UDim.new(0,22)
local panelStroke = Instance.new("UIStroke", panel)
panelStroke.Color = ACCENT
panelStroke.Thickness = 2
panelStroke.Transparency = 0.1

-- ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î (‡∏õ‡∏¥‡∏î‡πÄ‡∏â‡∏¢ ‡πÜ **‡πÑ‡∏°‡πà** ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î)
local btnClose = Instance.new("TextButton")
btnClose.Parent = panel
btnClose.Text = "X"
btnClose.Font = Enum.Font.GothamBold
btnClose.TextSize = 20
btnClose.TextColor3 = Color3.new(1,1,1)
btnClose.AutoButtonColor = false
btnClose.BackgroundColor3 = Color3.fromRGB(210,35,50)
btnClose.Size = UDim2.new(0,38,0,38)
btnClose.Position = UDim2.new(1,-50,0,14)
btnClose.ZIndex = 50
local closeCorner = Instance.new("UICorner", btnClose)
closeCorner.CornerRadius = UDim.new(0,12)
btnClose.MouseButton1Click:Connect(function()
  gui:Destroy() -- ‡∏õ‡∏¥‡∏î‡πÄ‡∏â‡∏¢ ‡πÜ
end)

-- HEADER
local head = Instance.new("Frame")
head.Parent = panel
head.BackgroundTransparency = 0.15
head.BackgroundColor3 = Color3.fromRGB(14,14,14)
head.Size = UDim2.new(1,-28,0,68)
head.Position = UDim2.new(0,14,0,14)
local hc = Instance.new("UICorner", head)  hc.CornerRadius = UDim.new(0,16)
local hs = Instance.new("UIStroke", head)  hs.Color = ACCENT  hs.Transparency = 0.85

local logo = Instance.new("ImageLabel")
logo.Parent = head
logo.BackgroundTransparency = 1
logo.Image = "rbxassetid://"..LOGO_ID
logo.Size = UDim2.new(0,34,0,34)
logo.Position = UDim2.new(0,16,0,17)

local title = Instance.new("TextLabel")
title.Parent = head
title.BackgroundTransparency = 1
title.Position = UDim2.new(0,60,0,18)
title.Size = UDim2.new(0,200,0,32)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.Text = "KEY SYSTEM"
title.TextColor3 = ACCENT
title.TextXAlignment = Enum.TextXAlignment.Left

-- LABEL "Key"
local keyLbl = Instance.new("TextLabel")
keyLbl.Parent = panel
keyLbl.BackgroundTransparency = 1
keyLbl.Position = UDim2.new(0,28,0,188)
keyLbl.Size = UDim2.new(0,60,0,22)
keyLbl.Font = Enum.Font.Gotham
keyLbl.TextSize = 16
keyLbl.Text = "Key"
keyLbl.TextColor3 = Color3.fromRGB(200,200,200)
keyLbl.TextXAlignment = Enum.TextXAlignment.Left

-- INPUT
local keyBox = Instance.new("TextBox")
keyBox.Parent = panel
keyBox.ClearTextOnFocus = false
keyBox.PlaceholderText = "insert your key here"
keyBox.Font = Enum.Font.Gotham
keyBox.TextSize = 16
keyBox.Text = ""
keyBox.TextColor3 = FG
keyBox.BackgroundColor3 = SUB
keyBox.BorderSizePixel = 0
keyBox.Size = UDim2.new(1,-56,0,40)
keyBox.Position = UDim2.new(0,28,0,214)
local keyCorner = Instance.new("UICorner", keyBox)
keyCorner.CornerRadius = UDim.new(0,12)
local keyStroke = Instance.new("UIStroke", keyBox)
keyStroke.Color = ACCENT
keyStroke.Transparency = 0.75

-- BUTTON
local RED   = Color3.fromRGB(210,60,60)
local GREEN = Color3.fromRGB(60,200,120)

local btnSubmit = Instance.new("TextButton")
btnSubmit.Parent = panel
btnSubmit.Text = "üîí  Submit Key"
btnSubmit.Font = Enum.Font.GothamBlack
btnSubmit.TextSize = 20
btnSubmit.TextColor3 = Color3.new(1,1,1)
btnSubmit.AutoButtonColor = false
btnSubmit.BackgroundColor3 = RED
btnSubmit.BorderSizePixel = 0
btnSubmit.Size = UDim2.new(1,-56,0,50)
btnSubmit.Position = UDim2.new(0,28,0,268)
local btnCorner = Instance.new("UICorner", btnSubmit)
btnCorner.CornerRadius = UDim.new(0,14)

-- STATUS
local statusLabel = Instance.new("TextLabel")
statusLabel.Parent = panel
statusLabel.BackgroundTransparency = 1
statusLabel.Position = UDim2.new(0,28,0,268+50+6)
statusLabel.Size = UDim2.new(1,-56,0,24)
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 14
statusLabel.Text = ""
statusLabel.TextColor3 = Color3.fromRGB(200,200,200)
statusLabel.TextXAlignment = Enum.TextXAlignment.Left

local function setStatus(txt, ok)
  statusLabel.Text = txt or ""
  if ok == nil then
    statusLabel.TextColor3 = Color3.fromRGB(200,200,200)
  elseif ok then
    statusLabel.TextColor3 = Color3.fromRGB(120,255,170)
  else
    statusLabel.TextColor3 = Color3.fromRGB(255,120,120)
  end
end

-- TOAST
local toast = Instance.new("TextLabel")
toast.Parent = panel
toast.BackgroundTransparency = 0.15
toast.BackgroundColor3 = Color3.fromRGB(30,30,30)
toast.Size = UDim2.fromOffset(0,32)
toast.Position = UDim2.new(0.5,0,0,16)
toast.AnchorPoint = Vector2.new(0.5,0)
toast.Visible = false
toast.Font = Enum.Font.GothamBold
toast.TextSize = 14
toast.Text = ""
toast.TextColor3 = Color3.new(1,1,1)
toast.ZIndex = 100
local tpad = Instance.new("UIPadding", toast)
tpad.PaddingLeft = UDim.new(0,14)  tpad.PaddingRight = UDim.new(0,14)
local tcorner = Instance.new("UICorner", toast)  tcorner.CornerRadius = UDim.new(0,10)

local function showToast(msg, ok)
  toast.Text = msg
  toast.TextColor3 = Color3.new(1,1,1)
  toast.BackgroundColor3 = ok and Color3.fromRGB(20,120,60) or Color3.fromRGB(150,35,35)
  toast.Size = UDim2.fromOffset(math.max(200, (#msg*8)+28), 32)
  toast.Visible = true
  toast.BackgroundTransparency = 0.15
  TS:Create(toast, TweenInfo.new(.08), {BackgroundTransparency = 0.05}):Play()
  task.delay(1.1, function()
    TS:Create(toast, TweenInfo.new(.15), {BackgroundTransparency = 1}):Play()
    task.delay(.15, function() toast.Visible = false end)
  end)
end

-- EFFECTS
local function refreshBtn()
  local has = keyBox.Text and #keyBox.Text > 0
  if has then
    TS:Create(btnSubmit, TweenInfo.new(.08), {BackgroundColor3 = GREEN}):Play()
    btnSubmit.TextColor3 = Color3.new(0,0,0)
    btnSubmit.Text = "üîì  Submit Key"
  else
    TS:Create(btnSubmit, TweenInfo.new(.08), {BackgroundColor3 = RED}):Play()
    btnSubmit.TextColor3 = Color3.new(1,1,1)
    btnSubmit.Text = "üîí  Submit Key"
  end
end

local function flashInputError()
  local old = keyStroke.Color
  TS:Create(keyStroke, TweenInfo.new(.05), {Color = Color3.fromRGB(255,90,90), Transparency = 0}):Play()
  task.delay(.22, function()
    TS:Create(keyStroke, TweenInfo.new(.12), {Color = old, Transparency = 0.75}):Play()
  end)
end

local function forceErrorUI(mainText, subText)
  TS:Create(btnSubmit, TweenInfo.new(.08), {BackgroundColor3 = Color3.fromRGB(255,80,80)}):Play()
  btnSubmit.Text = mainText or "‚ùå Invalid Key"
  btnSubmit.TextColor3 = Color3.new(1,1,1)
  setStatus(subText or "‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", false)
  showToast(subText or "‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", false)
  flashInputError()
  keyBox.Text = ""
  task.delay(0.02, function() keyBox:CaptureFocus() end)
  task.delay(1.1, function() refreshBtn() end)
end

local function successAndClose(k, expires_at, permanent)
  -- ‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ orchestrator ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏µ‡∏¢‡πå
  if _G and _G.UFO_SaveKeyState then
    _G.UFO_SaveKeyState(k, expires_at, permanent and true or false)
  end
  -- ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Download (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ "‡∏ú‡πà‡∏≤‡∏ô" ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
  if _G and _G.UFO_StartDownload then
    _G.UFO_StartDownload()
  end
  gui:Destroy()
end

-- EVENTS
keyBox:GetPropertyChangedSignal("Text"):Connect(function()
  setStatus("", nil)
  refreshBtn()
end)
refreshBtn()

-- SUBMIT FLOW
local submitting = false
local function doSubmit()
  if submitting then return end
  submitting = true
  btnSubmit.Active = false

  local raw = keyBox.Text or ""
  if raw == "" then
    submitting = false
    forceErrorUI("üö´ Please enter a key","‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞")
    return
  end

  setStatus("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå...", nil)
  TS:Create(btnSubmit, TweenInfo.new(.08), {BackgroundColor3 = Color3.fromRGB(70,170,120)}):Play()
  btnSubmit.Text = "‚è≥ Verifying..."

  -- 1) allow-list
  local allowed, nk = isAllowedKey(raw)
  if allowed then
    TS:Create(btnSubmit, TweenInfo.new(.10), {BackgroundColor3 = Color3.fromRGB(120,255,170)}):Play()
    btnSubmit.Text = "‚úÖ Key accepted"
    btnSubmit.TextColor3 = Color3.new(0,0,0)
    setStatus("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (Allow-list)", true)
    task.delay(.25, function()
      submitting = false
      successAndClose(raw, nil, true) -- ‡∏ñ‡∏≤‡∏ß‡∏£
    end)
    return
  end

  -- 2) ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏£‡∏¥‡∏á‡∏Å‡∏±‡∏ö key2 (JSON)
  local ok, exp, reason = validate_with_key2(raw)
  if not ok then
    submitting = false
    if reason == "unreachable" then
      forceErrorUI("‚ùå Invalid Key", "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏µ‡∏¢‡πå‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ (‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà)")
    elseif reason == "bad_json" then
      forceErrorUI("‚ùå Invalid Key", "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏™‡∏µ‡∏¢ (‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
    elseif reason == "no_valid_keys_field" then
      forceErrorUI("‚ùå Invalid Key", "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå valid_keys/games (‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
    else
      forceErrorUI("‚ùå Invalid Key", "‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    end
    return
  end

  -- ‡∏ú‡πà‡∏≤‡∏ô ‚úÖ
  TS:Create(btnSubmit, TweenInfo.new(.10), {BackgroundColor3 = Color3.fromRGB(120,255,170)}):Play()
  btnSubmit.Text = "‚úÖ Key accepted"
  btnSubmit.TextColor3 = Color3.new(0,0,0)
  setStatus("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!", true)
  task.delay(.25, function()
    submitting = false
    successAndClose(raw, exp, false)
  end)
end

btnSubmit.MouseButton1Click:Connect(doSubmit)
keyBox.FocusLost:Connect(function(enter) if enter then doSubmit() end end)

-- Open anim
panel.Position = UDim2.fromScale(0.5,0.5) + UDim2.fromOffset(0,14)
TS:Create(panel, TweenInfo.new(.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.fromScale(0.5,0.5)}):Play()
